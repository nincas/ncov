{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Pie.js","components/Header.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PieComponent","country","theme","data","activeIdx","useState","arrData","setData","countryInfo","setCountry","countryName","setCountryName","tested","setTested","setLatLong","colors","loading","setLoading","colorTheme","useEffect","pieData","length","setTimeout","fetch","then","json","cases","i","lat","long","tests","keys","indexOf","console","log","_","forEach","name","str","push","charAt","toUpperCase","substr","fill","totalCases","formatNumber","Number","toFixed","toLocaleString","CustomLabel","viewBox","cx","value1","value2","cy","x","y","className","fontWeight","activeIndex","setIndex","HeaderCont","styled","div","CountryName","span","CountryContainer","Loader","flag","src","style","height","title","image","width","separator","formatter","props","layout","verticalAlign","align","iconType","iconSize","entry","fontSize","textTransform","color","payload","activeShape","RADIAN","Math","PI","midAngle","innerRadius","outerRadius","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dominantBaseline","alignmentBaseline","d","stroke","r","dy","dataKey","nameKey","onMouseEnter","index","animationDuration","animationEasing","position","content","map","Header","stats","setStats","affectedCountries","setAffectedCountries","radialData","catch","err","error","H2","h2"],"mappings":"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","file":"static/js/7.6ea69004.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    PieChart,\r\n    Pie,\r\n    Tooltip,\r\n    Legend,\r\n    Text,\r\n    Label,\r\n    Cell,\r\n    Sector,\r\n    LineChart\r\n} from 'recharts'\r\nimport _ from 'lodash'\r\nimport Loader from './Loader'\r\nimport styled from 'styled-components'\r\nimport './Pie.css'\r\n\r\nconst ucword = (str) => str.charAt(0).toUpperCase() + str.substr(1, str.length)\r\n\r\nexport default function PieComponent ({country = 'philippines', theme, data = [], activeIdx = null}) {\r\n    const [arrData, setData] = useState([])\r\n    const [countryInfo, setCountry] = useState({});\r\n    const [countryName, setCountryName] = useState('');\r\n    const [tested, setTested] = useState(0);\r\n    const [latLong, setLatLong] = useState('')\r\n    const [colors, setColors] = useState({\r\n        'todayCases' : '#8DD1E1', // TodayCases\r\n        'deaths' : '#b33434', // Deaths\r\n        'todayDeaths' : '#e35146', // TodayDeaths\r\n        'recovered' : '#8884D8', // Recovered\r\n        'active' : '#A4DE6C', // Active\r\n        'critical' : '#d97b34', // Critical\r\n        'todayRecovered' : '#fca503'\r\n    })\r\n    \r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Theme\r\n    const colorTheme = theme == 'dark' ? '#fff' : '#26242E';\r\n\r\n    useEffect(() => {\r\n        let pieData = []\r\n\r\n        if (data.length > 0) {\r\n            setData(data)\r\n            setLoading(false)\r\n            return;\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            fetch('https://corona.lmao.ninja/v2/countries/' + country)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let cases = data.cases;\r\n                setCountry(data.countryInfo)\r\n                setCountryName(data.country)\r\n                setLatLong(`${data.countryInfo.lat},${data.countryInfo.long}`)\r\n                setTested(data.tests)\r\n\r\n                for (let i in data) {\r\n                    if (Object.keys(colors).indexOf(i) === -1) {\r\n                        delete data[i]\r\n                    }\r\n                }\r\n\r\n                console.log(colors)\r\n                _.forEach(data, (data, name) => {\r\n                    pieData.push({\r\n                        name: ucword(name),\r\n                        value: data,\r\n                        fill: colors[name],\r\n                        totalCases: cases\r\n                    })\r\n                });\r\n\r\n\r\n                setData(pieData)\r\n                setLoading(false)\r\n            })\r\n        }, 60000)\r\n    }, [arrData])\r\n\r\n\r\n    const formatNumber = (value) => {\r\n        if (typeof value == 'string') return;\r\n        return Number((value).toFixed(1)).toLocaleString()\r\n    }\r\n\r\n    const CustomLabel = ({viewBox, value1, value2}) => {\r\n        const {cx, cy} = viewBox;\r\n        return (\r\n            <text x={cx} y={cy + 20} className=\"containerLabel\" fill=\"red\" fontWeight=\"bold\" className=\"recharts-text recharts-label\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                {/* <tspan alignmentBaseline=\"bottom\" fontSize=\"12\">({value2})</tspan> */}\r\n            </text>\r\n        )\r\n    }\r\n\r\n\r\n    const renderActiveShape = (props) => {\r\n        const RADIAN = Math.PI / 180;\r\n        const {\r\n          cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n          fill, payload, percent, value,\r\n        } = props;\r\n        const sin = Math.sin(-RADIAN * midAngle);\r\n        const cos = Math.cos(-RADIAN * midAngle);\r\n        const sx = cx + (outerRadius + 10) * cos;\r\n        const sy = cy + (outerRadius + 10) * sin;\r\n        const mx = cx + (outerRadius + 30) * cos;\r\n        const my = cy + (outerRadius + 30) * sin;\r\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n        const ey = my;\r\n        const textAnchor = cos >= 0 ? 'start' : 'end';\r\n        return (\r\n          <g>\r\n            <text x={cx} y={cy} className=\"recharts-text recharts-label centerTextLabel\" textAnchor=\"middle\" fill={fill} dominantBaseline=\"central\">\r\n                <tspan alignmentBaseline=\"middle\" fontSize=\"14\" style={{\r\n                    fontWeight: 'bold'\r\n                }}>{payload.name}</tspan>\r\n            </text>\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              innerRadius={innerRadius}\r\n              outerRadius={outerRadius}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              fill={fill}\r\n            />\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              innerRadius={outerRadius + 6}\r\n              outerRadius={outerRadius + 10}\r\n              fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex - 10},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex - 10} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) } y={ey} textAnchor={textAnchor} fill={colorTheme} >{payload.name.toUpperCase()}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) } y={ey} dy={18} textAnchor={textAnchor} fontSize=\"12\" fill=\"#999\">\r\n              {`(${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n          </g>\r\n        );\r\n    };\r\n\r\n    const [activeIndex, setIndex] = useState(activeIdx ? activeIdx : 5);\r\n    const onPieEnter = (data, index) => {\r\n        setIndex(index)\r\n    }\r\n\r\n    const HeaderCont = styled.div`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-top: 20px;\r\n        color: #e85f5f;\r\n        font-size: 15px;\r\n        padding-bottom: 3px;\r\n\r\n        i {\r\n            color: #fff !important;\r\n        }\r\n    `\r\n\r\n    const CountryName = styled.span`\r\n        font-size: 18px !important;\r\n        color: ${theme == 'dark' ? 'yellow' : '#26242E'} !important;\r\n    `\r\n\r\n    const CountryContainer = styled.div`\r\n        display: flex !important;\r\n        flex-direction: row !important;\r\n        justify-content: center;\r\n        align-items: center !important;\r\n    `\r\n\r\n    // °\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? <Loader name={country} theme={theme}/> : \r\n                <div className=\"countryContainer\">\r\n                    <CountryContainer>\r\n                        {countryInfo.flag  ? <img src={countryInfo.flag} style={{\r\n                            height: '18px'\r\n                        }} title={country ? country.toUpperCase() : countryName.toUpperCase()}/> : ''}\r\n                        <CountryName> {countryName ? countryName.toUpperCase() : country.toUpperCase()}</CountryName>\r\n                    </CountryContainer>\r\n                    <HeaderCont image={countryInfo.flag ? countryInfo.flag : ''}>\r\n                        <span>CASES: <i>{formatNumber(arrData[0].totalCases)}</i></span>\r\n                        {country !== 'global' ? <span>TESTS: <i>{formatNumber(tested)}</i></span> : ''}\r\n                    </HeaderCont>\r\n                </div>\r\n            }\r\n            <PieChart width={500} height={400}>\r\n                <Tooltip separator=\"\" formatter={(value, name, props) => ([formatNumber(value), ''])}/>\r\n                <Legend \r\n                    layout=\"vertical\" \r\n                    verticalAlign=\"top\" \r\n                    align=\"center\"\r\n                    iconType=\"circle\"\r\n                    iconSize={12}\r\n                    formatter={(value, entry) => <span style={{\r\n                        fontSize: '12px',\r\n                        textTransform: 'uppercase',\r\n                        color: colorTheme\r\n                    }}>{value}: <i style={{color: 'red !important'}}>{formatNumber(entry.payload.value)}</i></span>}\r\n                />\r\n                {!loading ? \r\n                <Pie \r\n                    data={arrData} \r\n                    activeIndex={activeIndex}\r\n                    activeShape={renderActiveShape}\r\n                    dataKey=\"value\" \r\n                    nameKey=\"name\" \r\n                    cx=\"50%\" \r\n                    cy=\"50%\" \r\n                    outerRadius={85} \r\n                    innerRadius={55} \r\n                    fill=\"#8884d8\"\r\n                    onMouseEnter={onPieEnter}\r\n                    animationDuration={2000}\r\n                    animationEasing=\"ease-in-out\"\r\n                >\r\n                    <Label width={30} position=\"center\" content={<CustomLabel value1={formatNumber(arrData[0].totalCases)} value2={country}/>}></Label>\r\n                    {\r\n                        arrData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={entry.fill}/>\r\n                        ))\r\n                    }\r\n                </Pie>\r\n                :\r\n                ''\r\n                }\r\n            </PieChart> \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './Header.css';\r\nimport PieComponent from './Pie'\r\nimport styled from 'styled-components'\r\nimport Loader from './Loader'\r\nimport _ from 'lodash'\r\n\r\nconst ucword = (str) => str.charAt(0).toUpperCase() + str.substr(1, str.length)\r\n\r\nexport default function Header ({ theme }) \r\n{\r\n    const [stats, setStats] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [affectedCountries, setAffectedCountries] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            let radialData = []\r\n            fetch('https://corona.lmao.ninja/v2/all')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                const colors = {\r\n                    'todayCases': '#8DD1E1', // TodayCases\r\n                    'deaths': '#b33434', // Deaths\r\n                    'todayDeaths': '#e35146', // TodayDeaths\r\n                    'recovered': '#8884D8', // Recovered\r\n                    'active': '#A4DE6C', // Active\r\n                    'critical': '#d97b34', // Critical\r\n                    'todayRecovered': '#fca503'\r\n                };\r\n\r\n                setAffectedCountries(data.affectedCountries)\r\n                let totalCases = data.cases\r\n\r\n                for (let i in data) {\r\n                    if (Object.keys(colors).indexOf(i) === -1) {\r\n                        delete data[i]\r\n                    }\r\n                }\r\n                \r\n                _.forEach(data, function (data, name) {\r\n                    radialData.push({\r\n                        name: ucword(name),\r\n                        value: data,\r\n                        fill: colors[name],\r\n                        totalCases: totalCases\r\n                    })\r\n                })\r\n\r\n                setStats(radialData)\r\n                setLoading(false)\r\n            }).catch(err => {\r\n                console.error(err);\r\n            })\r\n        }, 5000)\r\n    }, [])\r\n\r\n\r\n    const H2 = styled.h2`\r\n        color: ${props => props.theme == 'dark' ? '#fff' : '#333'} !important;\r\n    `\r\n\r\n    const formatNumber = (value) =>  Number((value).toFixed(1)).toLocaleString();\r\n    return (\r\n        <div className=\"headerContainer\">\r\n            <H2 theme={theme}>AFFECTED COUNTRIES: \r\n                <i style={{\r\n                    color: 'red'\r\n                }}>{affectedCountries}</i>\r\n            </H2>\r\n            {!loading ? <PieComponent country=\"global\" theme={theme} data={stats} activeIdx={5}/> : <Loader theme={theme}/>}\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}