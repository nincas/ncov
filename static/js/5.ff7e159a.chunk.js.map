{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Pie.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PieComponent","country","data","activeIdx","useState","arrData","setData","countryInfo","setCountry","countryName","setCountryName","tested","setTested","colors","loading","setLoading","useEffect","pieData","length","setTimeout","fetch","then","json","cases","casesPerOneMillion","deathsPerOneMillion","updated","testsPerOneMillion","tests","_","forEach","name","str","push","charAt","toUpperCase","substr","totalCases","formatNumber","Number","toFixed","toLocaleString","CustomLabel","viewBox","cx","value1","value2","cy","x","y","className","fill","fontWeight","activeIndex","setIndex","HeaderCont","styled","div","Loader","flag","src","style","height","title","width","separator","formatter","props","layout","verticalAlign","align","iconType","iconSize","entry","fontSize","textTransform","color","payload","activeShape","RADIAN","Math","PI","midAngle","innerRadius","outerRadius","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dominantBaseline","alignmentBaseline","d","stroke","r","dy","dataKey","nameKey","onMouseEnter","index","animationDuration","animationEasing","position","content","map","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test","TypeError"],"mappings":"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","file":"static/js/5.ff7e159a.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    PieChart,\r\n    Pie,\r\n    Tooltip,\r\n    Legend,\r\n    Text,\r\n    Label,\r\n    Cell,\r\n    Sector,\r\n    LineChart\r\n} from 'recharts'\r\nimport _ from 'lodash'\r\nimport Loader from './Loader'\r\nimport styled from 'styled-components'\r\nimport './Pie.css'\r\n\r\nconst ucword = (str) => str.charAt(0).toUpperCase() + str.substr(1, str.length)\r\n\r\nexport default function PieComponent ({country = 'philippines', data = [], activeIdx = null}) {\r\n    const [arrData, setData] = useState([])\r\n    const [countryInfo, setCountry] = useState({});\r\n    const [countryName, setCountryName] = useState('');\r\n    const [tested, setTested] = useState(0);\r\n    const [colors, setColors] = useState([\r\n        '#8DD1E1', // TodayCases\r\n        '#b33434', // Deaths\r\n        '#e35146', // TodayDeaths\r\n        '#8884D8', // Recovered\r\n        '#A4DE6C', // Active\r\n        '#d97b34', // Critical\r\n    ])\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let pieData = []\r\n\r\n        if (data.length > 0) {\r\n            setData(data)\r\n            setLoading(false)\r\n            return;\r\n        }\r\n        \r\n        setTimeout(() => {\r\n            fetch('https://corona.lmao.ninja/countries/' + country)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let cases = data.cases;\r\n                setCountry(data.countryInfo)\r\n                setCountryName(data.country)\r\n                delete data.country\r\n                delete data.countryInfo\r\n                delete data.cases\r\n                delete data.casesPerOneMillion\r\n                delete data.deathsPerOneMillion\r\n                delete data.updated\r\n                delete data.testsPerOneMillion\r\n                setTested(data.tests)\r\n                delete data.tests\r\n\r\n                _.forEach(data, (data, name) => {\r\n                    pieData.push({\r\n                        name: ucword(name),\r\n                        value: data,\r\n                        totalCases: cases\r\n                    })\r\n                });\r\n\r\n\r\n                setData(pieData)\r\n                setLoading(false)\r\n            })\r\n        }, 3000)\r\n    }, [arrData])\r\n\r\n\r\n    const formatNumber = (value) => {\r\n        return Number((value).toFixed(1)).toLocaleString()\r\n    }\r\n\r\n    const CustomLabel = ({viewBox, value1, value2}) => {\r\n        const {cx, cy} = viewBox;\r\n        return (\r\n            <text x={cx} y={cy + 20} className=\"containerLabel\" fill=\"red\" fontWeight=\"bold\" className=\"recharts-text recharts-label\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                {/* <tspan alignmentBaseline=\"bottom\" fontSize=\"12\">({value2})</tspan> */}\r\n            </text>\r\n        )\r\n    }\r\n\r\n\r\n    const renderActiveShape = (props) => {\r\n        const RADIAN = Math.PI / 180;\r\n        const {\r\n          cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n          fill, payload, percent, value,\r\n        } = props;\r\n        const sin = Math.sin(-RADIAN * midAngle);\r\n        const cos = Math.cos(-RADIAN * midAngle);\r\n        const sx = cx + (outerRadius + 10) * cos;\r\n        const sy = cy + (outerRadius + 10) * sin;\r\n        const mx = cx + (outerRadius + 30) * cos;\r\n        const my = cy + (outerRadius + 30) * sin;\r\n        const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n        const ey = my;\r\n        const textAnchor = cos >= 0 ? 'start' : 'end';\r\n        return (\r\n          <g>\r\n            {/* <text x={cx} y={cy} dy={8} className=\"textInsidePie\" textAnchor=\"middle\" fill={fill} style={{\r\n                fontWeight: 'bold'\r\n            }}> */}\r\n            <text x={cx} y={cy} className=\"recharts-text recharts-label centerTextLabel\" textAnchor=\"middle\" fill={fill} dominantBaseline=\"central\">\r\n                <tspan alignmentBaseline=\"middle\" fontSize=\"14\" style={{\r\n                    fontWeight: 'bold'\r\n                }}>{payload.name}</tspan>\r\n            </text>\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              innerRadius={innerRadius}\r\n              outerRadius={outerRadius}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              fill={fill}\r\n            />\r\n            <Sector\r\n              cx={cx}\r\n              cy={cy}\r\n              startAngle={startAngle}\r\n              endAngle={endAngle}\r\n              innerRadius={outerRadius + 6}\r\n              outerRadius={outerRadius + 10}\r\n              fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex - 10},${ey}`} stroke={fill} fill=\"none\" />\r\n            <circle cx={ex - 10} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n            <text x={ex + (cos >= 0 ? 1 : -1) } y={ey} textAnchor={textAnchor} fill=\"#fff\" >{payload.name.toUpperCase()}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) } y={ey} dy={18} textAnchor={textAnchor} fontSize=\"12\" fill=\"#999\">\r\n              {`(${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n          </g>\r\n        );\r\n    };\r\n\r\n    const [activeIndex, setIndex] = useState(activeIdx ? activeIdx : 4);\r\n    const onPieEnter = (data, index) => {\r\n        setIndex(index)\r\n    }\r\n\r\n    const HeaderCont = styled.div`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-top: 20px;\r\n        color: #e85f5f;\r\n        font-size: 18px;\r\n\r\n        i {\r\n            color: #fff !important;\r\n        }\r\n    `\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? <Loader name={country}/> : \r\n                <div className=\"countryContainer\">\r\n                    {countryInfo.flag  ? <img src={countryInfo.flag} style={{\r\n                        height: '28px'\r\n                    }} title={country ? country.toUpperCase() : countryName.toUpperCase()}/> : ''}\r\n                    <HeaderCont>\r\n                        <span>CASES: <i>{formatNumber(arrData[0].totalCases)}</i></span>\r\n                        {country !== 'global' ? <span>TEST CONDUCTED: <i>{formatNumber(tested)}</i></span> : ''}\r\n                    </HeaderCont>\r\n                </div>\r\n            }\r\n            <PieChart width={500} height={350}>\r\n                <Tooltip separator=\"\" formatter={(value, name, props) => ([formatNumber(value), ''])}/>\r\n                <Legend \r\n                    layout=\"vertical\" \r\n                    verticalAlign=\"top\" \r\n                    align=\"center\"\r\n                    iconType=\"circle\"\r\n                    iconSize=\"12\"\r\n                    formatter={(value, entry) => <span style={{\r\n                        fontSize: '12px',\r\n                        textTransform: 'uppercase',\r\n                        color: '#fff'\r\n                    }}>{value}: <i style={{color: 'red !important'}}>{formatNumber(entry.payload.value)}</i></span>}\r\n                />\r\n                {!loading ? \r\n                <Pie \r\n                    data={arrData} \r\n                    activeIndex={activeIndex}\r\n                    activeShape={renderActiveShape}\r\n                    dataKey=\"value\" \r\n                    nameKey=\"name\" \r\n                    cx=\"50%\" \r\n                    cy=\"50%\" \r\n                    outerRadius={85} \r\n                    innerRadius={55} \r\n                    fill=\"#8884d8\"\r\n                    onMouseEnter={onPieEnter}\r\n                    animationDuration={2000}\r\n                    animationEasing=\"ease-in-out\"\r\n                >\r\n                    <Label width={30} position=\"center\" content={<CustomLabel value1={formatNumber(arrData[0].totalCases)} value2={country}/>}></Label>\r\n                    {\r\n                        arrData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={colors[index]}/>\r\n                        ))\r\n                    }\r\n                </Pie>\r\n                :\r\n                ''\r\n                }\r\n\r\n                \r\n            </PieChart> \r\n        </div>\r\n    )\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}